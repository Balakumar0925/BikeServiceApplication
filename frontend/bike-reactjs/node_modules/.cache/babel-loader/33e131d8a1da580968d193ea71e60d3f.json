{"ast":null,"code":"var _jsxFileName = \"F:\\\\BikeServiceApplication\\\\frontend\\\\bike-reactjs\\\\src\\\\ownerpages\\\\updatestatus.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport axiosReq from './../utils/axioslib';\nimport { Table, Button, Form, FormGroup } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StatusUpdate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      phoneNumber: props.phoneNumber,\n      bookingID: props.bookingID,\n      status: props.status,\n      responseBody: ''\n    };\n    this.statusChange = this.statusChange.bind(this);\n    this.update = this.update.bind(this);\n  }\n\n  update(e) {\n    if (e.target.id == 'phoneNumber') {\n      this.setState(state => ({ ...this.state,\n        'phoneNumber': e.target.value\n      }));\n    }\n\n    if (e.target.id == 'bookingID') {\n      //console.log('bookingid', e.target.value);\n      this.setState(state => ({ ...this.state,\n        'bookingID': e.target.value\n      }));\n    }\n\n    if (e.target.id == 'select') {\n      //console.log('status', e.target.value);\n      this.setState(state => ({ ...this.state,\n        'status': e.target.value\n      }));\n    }\n  }\n\n  async statusChange() {\n    let option = {\n      url: `/serviceowner/updatecustomerstatus`,\n      method: \"PUT\",\n      params: {\n        phoneNumber: this.state.phoneNumber,\n        bookingID: this.state.bookingID,\n        status: this.state.status\n      }\n    };\n    let httpResponse = await axiosReq(option); //console.log(httpResponse);\n\n    this.setState({ ...this.state,\n      responseBody: httpResponse\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"PHONENUMBER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"phoneNumber\",\n            value: this.state.phoneNumber,\n            onChange: this.update\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"BOOKINGID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            id: \"bookingID\",\n            value: this.state.bookingID,\n            onChange: this.update\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"STATUS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            name: \"status\",\n            id: \"select\",\n            value: this.state.status,\n            onChange: this.update,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"pending\",\n              children: \"pending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"readyfordelivery\",\n              children: \"readyfordelivery\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"completed\",\n              children: \"completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.statusChange,\n        children: \"updateStatus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 18\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 76\n      }, this), this.state.responseBody]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default StatusUpdate;\n\nfunction callBackend(options) {\n  return new Promise((resolve, reject) => {\n    axios(options).then(axiosResponse => {\n      resolve(axiosResponse.data);\n    }).catch(err => {\n      reject(err);\n    });\n  });\n}","map":{"version":3,"sources":["F:/BikeServiceApplication/frontend/bike-reactjs/src/ownerpages/updatestatus.js"],"names":["React","axios","axiosReq","Table","Button","Form","FormGroup","StatusUpdate","Component","constructor","props","state","phoneNumber","bookingID","status","responseBody","statusChange","bind","update","e","target","id","setState","value","option","url","method","params","httpResponse","render","callBackend","options","Promise","resolve","reject","then","axiosResponse","data","catch","err"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport axiosReq from './../utils/axioslib';\r\nimport {Table, Button, Form, FormGroup} from 'react-bootstrap';\r\n\r\n\r\nclass StatusUpdate extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            phoneNumber:props.phoneNumber,\r\n            bookingID:props.bookingID,\r\n            status:props.status,\r\n            responseBody:''\r\n        };\r\n        this.statusChange=this.statusChange.bind(this);\r\n        this.update=this.update.bind(this);\r\n    }\r\n\r\n    update(e){\r\n        if(e.target.id == 'phoneNumber'){\r\n            this.setState((state)=>({\r\n                ...this.state,\r\n                'phoneNumber':e.target.value\r\n            }));\r\n        }\r\n        if(e.target.id == 'bookingID'){\r\n            //console.log('bookingid', e.target.value);\r\n            this.setState((state)=>({\r\n                ...this.state,\r\n                'bookingID':e.target.value\r\n            }));\r\n        }\r\n\r\n        if(e.target.id == 'select'){\r\n            //console.log('status', e.target.value);\r\n            this.setState((state)=>({\r\n                ...this.state,\r\n                'status':e.target.value\r\n            }));\r\n        }\r\n    }\r\n    \r\n\r\n    async statusChange(){\r\n        let option = {\r\n            url : `/serviceowner/updatecustomerstatus`,\r\n            method: \"PUT\",\r\n            params:{\r\n                phoneNumber:this.state.phoneNumber,\r\n                bookingID:this.state.bookingID,\r\n                status:this.state.status\r\n            }\r\n        };\r\n        let httpResponse = await axiosReq(option);\r\n        //console.log(httpResponse);\r\n        this.setState({\r\n            ...this.state,\r\n            responseBody: httpResponse\r\n        });\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n               <div>\r\n               <Form>\r\n               <FormGroup>\r\n                   <Form.Label>PHONENUMBER</Form.Label>\r\n                   <Form.Control id=\"phoneNumber\" value={this.state.phoneNumber} onChange={this.update}></Form.Control>\r\n               </FormGroup>\r\n               <FormGroup>\r\n               <Form.Label>BOOKINGID</Form.Label>\r\n                <Form.Control  id=\"bookingID\"  value={this.state.bookingID} onChange={this.update}></Form.Control>\r\n               </FormGroup>\r\n               <FormGroup >\r\n               <Form.Label>STATUS</Form.Label>\r\n               <Form.Control as=\"select\" name=\"status\" id=\"select\"  value={this.state.status} onChange={this.update}>\r\n                    <option value=\"pending\">pending</option>\r\n                    <option value=\"readyfordelivery\">readyfordelivery</option>\r\n                    <option value=\"completed\">completed</option>\r\n               </Form.Control>\r\n               </FormGroup>\r\n                   \r\n                 </Form>   \r\n                 <Button onClick={this.statusChange}>updateStatus</Button> <br />\r\n                    {this.state.responseBody}\r\n\r\n               </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StatusUpdate;\r\n\r\nfunction callBackend(options) {\r\n\r\n    return new Promise((resolve, reject)=>{\r\n\r\n        axios(options).then((axiosResponse)=> {\r\n            resolve(axiosResponse.data)\r\n        }).catch((err) => {\r\n            reject(err);\r\n        })\r\n\r\n    })\r\n\r\n}"]},"metadata":{},"sourceType":"module"}